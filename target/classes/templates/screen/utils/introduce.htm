
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org" es:layout>
<head>
    <title>MelodyDemo</title>
    <link rel="stylesheet" type="text/css" media="all"
          th:href="script/chat.css" />
</head>
<body>
<div th:fragment="screen_content">

<p>Melody在<i>com.eyeieye.melos.util</i> 中内置了多个工具了，主要有如下几个：<br/></p>

<pre>
<p>
· DateUtil  · StringUtil<br/>
· HostUtil  · MoneyUtil<br/>
· ArrayUtil · ObjectFactory<br/>
· ClassUtil · UUIDGenerator<br/>
· ShortUUIDGenerator<br/>
</p>
</pre>

<p>工具类的方法均为静态方法，可通过类名直接调用，各工具类的具体功能如下所示：</p>

<details close>
    <summary>
        <h3>DateUtil</h3>
    </summary>
    <br/>
    <div style="margin-left: 5%;">
        <th:block es:contain="lazy:${#url.get('appServer','utils/dateutil.htm')}" ></th:block>
    </div>
    <p>示例：<a class="m-detail-link1" th:href="${#url.get('appServer','/utils/demo/dateutil.htm')}" target="_blank">DateUtil示例</a> </p>
</details>
<details close>
    <summary>
        <h3>StringUtil</h3>
    </summary>
    <br/>
    <div style="margin-left: 5%;">
        <th:block es:contain="lazy:${#url.get('appServer','utils/stringutil.htm')}" ></th:block>
    </div>
    <p>示例：<a class="m-detail-link1" th:href="${#url.get('appServer','/utils/demo/stringutil.htm')}" target="_blank">StringUtil示例</a> </p>
</details>
<details close>
    <summary>
        <h3>HostUtil</h3>
    </summary>
    <br/>
    <div style="margin-left: 5%;">
        <th:block es:contain="lazy:${#url.get('appServer','utils/hostutil.htm')}" ></th:block>
    </div>
    <p>示例：<a class="m-detail-link1" th:href="${#url.get('appServer','/utils/demo/hostutil.htm')}" target="_blank">HostUtil示例</a> </p>
</details>
<details close>
    <summary>
        <h3>MoneyUtil</h3>
    </summary>
    <br/>
    <div style="margin-left: 5%;">
        <th:block es:contain="lazy:${#url.get('appServer','utils/moneyutil.htm')}" ></th:block>
    </div>
    <p>示例：<a class="m-detail-link1" th:href="${#url.get('appServer','/utils/demo/moneyutil.htm')}" target="_blank">MoneyUtil示例</a> </p>
</details>
<details close>
    <summary>
        <h3>ArrayUtil</h3>
    </summary>
    <br/>
    <div style="margin-left: 5%;">
        <th:block es:contain="lazy:${#url.get('appServer','utils/arrayutil.htm')}" ></th:block>
    </div>
    <p>示例：<a class="m-detail-link1" th:href="${#url.get('appServer','/utils/demo/arrayutil.htm')}" target="_blank">ArrayUtil示例</a> </p>
</details>
<details close>
    <summary>
        <h3>ObjectFactory</h3>
    </summary>
    <br/>
    <div style="margin-left: 5%;">
        <th:block es:contain="lazy:${#url.get('appServer','utils/objectfactory.htm')}" ></th:block>
    </div>
    <p>示例：该工具类无法直接演示，可以访问本demo中com.eyeieye.melody.demo.controller.UtilsController的ObjectFactoryDemo()方法，并查看运行结果。</p>
    <p>从本例子中可以看出，本工具类中，createBean和autowireBeanProperties两个方法是获得新的bean，而其他方法是获得当前spring已经加载的bean。</p>
</details>
<details close>
    <summary>
        <h3>UUIDGenerator</h3>
    </summary>
    <br/>
    <div style="margin-left: 5%;">
        <div id="uuid_contained" es:contain="reload:${#url.get('appServer','utils/uuidgenerator.htm')}" ></div>
        <button onclick="refresh('uuid_contained')">点击刷新该区域</button>
    </div>
    <script type="text/javascript">
        function refresh(id){
            Melody.get(id).refresh();
        }
    </script>
</details>
</div>
</body>
</html>